version: '3.8'

services:
  # PostgreSQLデータベース
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: runners_insight
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis（Celery用）
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Djangoバックエンド
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=development-secret-key-change-in-production
      - DB_NAME=runners_insight
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - USE_S3=False
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --reload runners_insight.wsgi:application"

  # Celeryワーカー（非同期タスク処理用）
  celery:
    build: ./backend
    volumes:
      - ./backend:/app
      - media_volume:/app/media
    environment:
      - DEBUG=True
      - SECRET_KEY=development-secret-key-change-in-production
      - DB_NAME=runners_insight
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - USE_S3=False
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: celery -A runners_insight worker --loglevel=info

  # Reactフロントエンド + Nginx
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    volumes:
      - media_volume:/usr/share/nginx/html/media

volumes:
  postgres_data:
  redis_data:
  media_volume: 